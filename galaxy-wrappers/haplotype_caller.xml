<tool id="gatk4_HaplotypeCaller" name="GATK4 HaplotypeCaller" version="1.0.0">
    <description>- Call germline SNPs and indels via local re-assembly of haplotypes</description>
    <requirements>
      <requirement type="package" version="4.2.6.1">gatk4</requirement>
    </requirements>
    <macros>
      <import>macros.xml</import>
    </macros>
    <command detect_errors="exit_code">
    <![CDATA[
    ln -s '$FASTA' fasta.fa &&
    ln -s '$BAM' bamfile.bam &&
    ln -s '$OUTPUT' output.vcf &&

    samtools faidx fasta.fa --output fasta.fa.fai &&
    gatk CreateSequenceDictionary -R fasta.fa -O fasta.dict 2>&1 &&

    gatk BuildBamIndex -I bamfile.bam &&

    gatk HaplotypeCaller -I bamfile.bam -R fasta.fa -O output.vcf

    ##ADD ALLELES OPTIONS

    #if '$gatk_param_type_selector' == "advanced"
      ##Input Validation
      --read-validation-stringency '$read_validation_stringency'
      #if not $disable_sequence_dictionary_validation
          --disable-sequence-dictionary-validation
      #end if
      #if $lenient
          --lenient
      #end if

      ##Read Filters
      #if not $disable_tool_default_read_filters
          --disable-tool-default-read-filters
      #end if
      $read_filter
      $disable_read_filter
  
      ##Genomic Intervals
      #if $exclude_intervals_string
          --exclude-intervals '$exclude_intervals_string'
      #end if
      #if str($exclude_intervals_file) != "None"
          --exclude-intervals '$exclude_intervals_file'
      #end if
      --interval-exclusion-padding '$interval_exclusion_padding'
      --interval-set-rule '$interval_set_rule'

      ##Performance
      #if $use_jdk_deflater
          --use-jdk-deflater
      #end if
      #if $use_jdk_inflater
          --use-jdk-inflater
      #end if

      ##Macro Files
      #if str($gatk_config_file)
          --gatk-config-file '$gatk_config_file'
      #end if
      #if str($arguments_file)
          --arguments-file '$arguments_file'
      #end if
      #if str($sequence_dictionary)
          --sequence-dictionary '$sequence_dictionary'
      #end if
      #if str($read_index) != "None"
          --read-index '$read_index'
      #end if
    #end if
    
    #if '$tool_param_selector' == "advanced"
      ##Genomic Intervals
      #if $intervals
          --intervals '$intervals'
      #end if
      --interval-padding '$interval_padding'
      --interval-merging-rule '$interval_merging_rule'

      ##Penalties & Buffers
      --cloud-prefetch-buffer '$cloud_prefetch_buffer'
      #if $cloud_index_prefetch_buffer
        --cloud-index-prefetch-buffer '$cloud_index_prefetch_buffer'
      #end if

      ##Performance
      --gcs-max-retries '$gcs_max_retries'
      --disable-bam-index-caching '$disable_bam_index_caching'
    #end if
        ]]>
    </command>
    <inputs>
     <param name="BAM" type="data" format="bam,cram,sam" label="Input file" />
      <param name="FASTA" type="data" format="fasta" label="Reference file"/>
            <param name="FASTA_SELECT" type="select" label="Select reference genome" help="If your genome of interest is not listed, contact the Galaxy team" optional="True" >
            <option> from_data_table="fasta_indexes" </option>
      </param>
      <section name="Optional Inputs">
        <param name="ALLELES" type="data" format="vcf" label="Set of alleles to force-call regardless of evidence"/>
        <conditional name="annotation_groupsd">
          <param name="num_sites" type="select" label="Number of files containing known sites" >
              <option value="Single" selected="true">Single</option>
              <option value="Multiple">Multiple</option>
          </param>
          <when value="Single">
              <param type="data" name="VCF" format="vcf" label="Known sites"/>
          </when>
          <when value="Multiple">
              <param type="data_collection" collection_type="list" name="VCF" format="vcf" label="Known sites"/>
          </when>
        </conditional>
      </section>

      <expand macro="gatk_param_type_conditional" />

      <conditional name ="tool_params">
        <param name="tool_param_selector" type="select" label="Basic or Advanced Tool options">
          <option value="basic" selected="True">Basic</option>
          <option value="advanced">Advanced</option>
        </param>
        <when value = "basic">
          <!--Do nothing-->
        </when>
        <when value="advanced">
          <section name="Read Filters" expanded="false" help="Refer to GATK tool index for available filters">
            <param type="boolean" argument="--allow-non-unique-kmers-in-ref" label="Allow graphs that have non-unique kmers in the reference" checked="false" />
          </section>
          <section name="Genomic Intervals">
            <param type="text" argument="--intervals" label="Include genomic intervals" optional="True" help="samtools-style genomic intervals to be included (e.g. chr24 or chr24:100-200)" />
            <param type="integer" argument="--interval-padding" label="Amount of padding for each interval (bp)" value="0" help="For example, '-L 1:100' with a padding value of 20 would turn into '-L 1:80-120'."/>
            <param type="text" name="exclude_intervals_string" argument="--exclude-intervals" label="Excluded intervals manually" optional="True" help="samtools-style genomic intervals to be excluded (e.g. chr24 or chr24:100-200)" />
            <param type="select" argument="--interval-merging-rule" label="Rule for merging abutting intervals">
                <option value="ALL" selected="True">ALL</option>
                <option value="OVERLAPPING_ONLY">OVERLAPPING_ONLY</option>
            </param>
          </section>
          <section name="Penalties &amp; Buffers">
            <param type="integer" argument="--cloud-prefetch-buffer" label="Size of the cloud-only prefetch buffer (in MB)" value="40" help="0 to disable." />
            <param type="integer" argument="--cloud-index-prefetch-buffer" label="Size of the cloud-only prefetch buffer (in MB)" optional="True" help="Defaults to cloudPrefetchBuffer" />
          </section>
          <section name="Alleles">
            <param type="text" name="alleles" label="Set of alleles to force-call called regardless of evidence" optional="true" help="Enter each allele as you would in the command line: '-G [allele]' for each allele" />
            <param type="text" argument="--annotations" label="Specific annotations to add to variant calls" optional="true" />
            <param type="text" argument="--annotation-group" labe="One or more groups of annotations to apply to variant calls" optional="true" />
            <param type="boolean" argument="--annotate-with-num-discovered-alleles" label="Annotate records with the number of alternate alleles that were discovered" checked="false" />
          </section>
          <section name="Performance">
            <param type="integer" argument="--gcs-max-retries" value="20" label="Number of times to attempt to re-initiate connection to GCS bucket channel" />
            <param type="boolean" argument="--disable-bam-index-caching" label="Cache bam indexes (reduces memory requirements)" checked="True" />
          </section>
        </when>
      </conditional>
    </inputs>
    <outputs>
        <data name="OUTPUT" type="data" format="vcf" label="GVCF file"/>
    </outputs>

    <tests>
    </tests>

    <help>
      **What it does**

      Apply base quality score recalibration
      This tool performs the second pass in a two-stage process called Base Quality Score Recalibration (BQSR). Specifically, it recalibrates the base qualities of the input reads based on the recalibration table produced by the BaseRecalibrator tool, and outputs a recalibrated BAM or CRAM file.

      https://gatk.broadinstitute.org/hc/en-us/articles/360037055712-ApplyBQSR

    </help>

</tool>